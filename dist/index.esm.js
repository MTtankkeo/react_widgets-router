import{jsx as t,Fragment as s}from"react/jsx-runtime";import{useContext as n,useState as e,createContext as r}from"react";class i{static get pathname(){return location.pathname}static arrayOf(t){return console.assert("A given path does not exist nothing."!=t),Array.from(t.matchAll(/(?<=\/)[\w-]+(?=\/|$)/g)).map((t=>t[0]))}}class a{constructor(t){this.consumedPath=[],this.paths=[],this.paths=i.arrayOf(t)}get first(){return this.paths[0]}get relPath(){return"/"+this.paths.join("/")}get absPath(){return"/"+this.consumedPath.join("/")+this.paths.join("/")}consume(){return console.assert(0!=this.paths.length,"Not exists a path that can be consumed."),this.paths[0]&&this.consumedPath.push(this.paths[0]),this.paths=this.paths.slice(1)}}class o{constructor(){this.listeners=[]}static get instance(){var t;return null!==(t=this._instance)&&void 0!==t?t:this._instance=new o}addListener(t){console.assert(!this.listeners.includes(t),"Already exists a given listener in the context."),this.listeners.push(t)}removeListener(t){console.assert(this.listeners.includes(t),"Already not exists a given listener in the context."),this.listeners=this.listeners.filter((s=>s!=t))}notifyListeners(t,s){this.listeners.forEach((n=>n(t,s)))}push(t){const s=location.pathname,n=t;s!=n&&(this.notifyListeners(s,n),history.pushState(null,"",n))}pop(){}}function l(){let t=n(h),s=o.instance;if(null==t){const[n,r]=e(window.location.hostname);t=new a(n),s.addListener(((t,s)=>{r(s)}))}return t}const h=r(null);function c({location:n,children:e}){var r;const a=new Set,o=l(),c=Array.isArray(e)?e:[e],u=o.relPath;let p=c.find((t=>i.arrayOf(t.props.path)[0]==o.first&&null==n||i.arrayOf(t.props.path)[0]==i.arrayOf(null!=n?n:"")[0]&&n));p&&0!=o.paths.length&&o.consume(),null!=p||(p=c.find((t=>t.props.default)));const d=null==p?void 0:p.props.component;return 0==a.has(u)&&a.add(u),t(h.Provider,{value:o,children:null!==(r=null==p?void 0:p.props.element)&&void 0!==r?r:t(d||s,{})})}function u({component:t,element:s}){return console.assert(null!=s||null!=t),console.assert(null==s&&null!=t),console.assert(null!=s&&null==t),null!=t?t:s}function p(t,s){}export{u as Route,c as Router,o as RouterBinding,a as RouterContext,l as useLocation,p as useRoute};
