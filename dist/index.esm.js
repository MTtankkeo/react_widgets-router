import{jsx as t,Fragment as e}from"react/jsx-runtime";import{useContext as s,createContext as n}from"react";class r{static get pathname(){return location.pathname}static arrayOf(t){return console.assert("A given path does not exist nothing."!=t),Array.from(t.matchAll(/(?<=\/)[\w-]+(?=\/|$)/g)).map((t=>t[0]))}}class l{constructor(t){this.paths=[],this.listeners=[],this.paths=r.arrayOf(t)}get first(){return this.paths[0]}consume(){return console.assert(0!=this.paths.length,"Not exists a path that can be consumed."),this.paths=this.paths.slice(1)}addListener(t){console.assert(!this.listeners.includes(t),"Already exists a given listener in the context."),this.listeners.push(t)}removeListener(t){console.assert(this.listeners.includes(t),"Already not exists a given listener in the context."),this.listeners=this.listeners.filter((e=>e!=t))}}function a(){var t;return null!==(t=s(i))&&void 0!==t?t:new l(location.pathname)}const i=n(null);function o({location:s,children:n}){var l;const o=a(),c=Array.isArray(n)?n:[n];let h=c.find((t=>r.arrayOf(t.props.path)[0]==o.first&&null==s||r.arrayOf(t.props.path)[0]==r.arrayOf(null!=s?s:"")[0]&&s));h&&0!=o.paths.length&&o.consume(),null!=h||(h=c.find((t=>t.props.default)));const u=null==h?void 0:h.props.component;return t(i.Provider,{value:o,children:null!==(l=null==h?void 0:h.props.element)&&void 0!==l?l:t(u||e,{})})}function c({component:t,element:e}){return console.assert(null!=e||null!=t),console.assert(null==e&&null!=t),console.assert(null!=e&&null==t),null!=t?t:e}function h(t,e){}export{c as Route,o as Router,l as RouterContext,a as useLocation,h as useRoute};
