!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("react/jsx-runtime"),require("react")):"function"==typeof define&&define.amd?define(["exports","react/jsx-runtime","react"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).ReactWidgetsRouter={},e.jsxRuntime,e.React)}(this,(function(e,t,s){"use strict";class n{static get pathname(){return location.pathname}static arrayOf(e){return console.assert("A given path does not exist nothing."!=e),Array.from(e.matchAll(/(?<=\/)[\w-]+(?=\/|$)/g)).map((e=>e[0]))}}class r{constructor(e){this.paths=[],this.listeners=[],this.paths=n.arrayOf(e)}get first(){return this.paths[0]}consume(){return console.assert(0!=this.paths.length,"Not exists a path that can be consumed."),this.paths=this.paths.slice(1)}addListener(e){console.assert(!this.listeners.includes(e),"Already exists a given listener in the context."),this.listeners.push(e)}removeListener(e){console.assert(this.listeners.includes(e),"Already not exists a given listener in the context."),this.listeners=this.listeners.filter((t=>t!=e))}}const o=s.createContext(null);e.Route=function({component:e,element:t}){return console.assert(null!=t||null!=e),console.assert(null==t&&null!=e),console.assert(null!=t&&null==e),null!=e?e:t},e.Router=function({location:e=n.pathname,children:i}){var l,a;const u=null!==(l=s.useContext(o))&&void 0!==l?l:new r(e),c=Array.isArray(i)?i:[i];let h=c.find((e=>n.arrayOf(e.props.path)[0]==u.first));h&&0!=u.paths.length&&u.consume(),null!=h||(h=c.find((e=>e.props.default)));const p=null==h?void 0:h.props.component;return t.jsx(o.Provider,{value:u,children:null!==(a=null==h?void 0:h.props.element)&&void 0!==a?a:p?t.jsx(p,{}):t.jsx(t.Fragment,{})})},e.RouterContext=r,e.useLocation=function(){},e.useRoute=function(e,t=!1){}}));
